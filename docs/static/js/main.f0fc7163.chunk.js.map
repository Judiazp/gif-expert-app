{"version":3,"sources":["components/addCategory/index.jsx","helpers/getGifs.js","components/gifCard/index.jsx","components/gifGrid/index.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifCard","gif","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","GiffExpertApp","class","href","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,YAAY,cACZC,SAjBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOC,a,uBCPlBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCULO,EATC,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACf,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKF,EAAId,IAAKiB,IAAI,QACvB,qBAAIF,UAAU,YAAd,cAA6BD,EAAIJ,MAAjC,WCmBGQ,EArBC,SAAC,GAAkB,IAAD,ECAP,SAAEpB,GAAe,IAAD,EAEbf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAgBvC,OATAC,qBAAW,WACPzB,EAASC,GAAWyB,MAAM,SAAAjB,GACtBe,EAAS,CACLhB,KAAMC,EACNa,SAAS,SAGlB,CAAErB,IAEEsB,EDdyBI,CAFF,EAAf1B,UAEFa,EAFiB,EAEtBN,KAAac,EAFS,EAETA,QAErB,OACI,qCACMA,GAAW,2CAIb,qBAAKJ,UAAU,OAAf,SAEQJ,EAAOJ,KAAK,SAAAO,GAAG,OACX,cAAC,EAAD,CAAsBA,IAAMA,GAAdA,EAAIL,aEM3BgB,EAnBO,WAAO,IAAD,EAEY1C,mBAAS,CAAC,KAFtB,mBAEjBQ,EAFiB,KAELT,EAFK,KAIxB,OACI,sBAAK2B,GAAG,cAAcM,UAAU,aAAhC,UACI,gCACI,mBAAGW,MAAM,WAAWC,KAAK,IAAzB,2BACA,8BACI,cAAC,EAAD,CAAa7C,cAAgBA,SAIjCS,EAAWgB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAWA,GAArBA,U,MCZzD8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f0fc7163.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault() \n        if (inputValue.trim().length >= 3) {\n            setCategories(categories =>[ inputValue, ...categories]);\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                placeholder=\"Buscar Gifs\"\n                onChange= { handleChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","\nexport const getGifs = async( category ) => {\n    \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=20&api_key=r4Gh4kFBn2bOQtHLdl3C6bYEWGIwaWtB`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react';\n\nconst GifCard = ({ gif }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\">\n            <img src={gif.url} alt=\"Gif\" />\n            <h4 className=\"gif-title\"> { gif.title } </h4>\n        </div>\n    )\n}\n\nexport default GifCard;","import React from 'react';\nimport { useFetchGif } from '../../hooks/useFetchGifs';\nimport GifCard from '../gifCard';\n\nconst GifGrid = ( {category} ) => {\n\n    const { data:images ,loading} = useFetchGif( category );\n\n    return(\n        <>\n            { loading && <p>Loading...</p>} \n            {/* <div align=\"center\">\n                <h2 className=\"title-gifGrid animate__animated animate__fadeInDown\">{ category }</h2>\n            </div> */}\n            <div className=\"grid\">\n                {\n                    images.map( gif => (\n                        <GifCard key={gif.id} gif={ gif } />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGif = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category ).then( gifs => {\n            setState({\n                data: gifs,\n                loading: false\n            });\n        } )\n    }, [ category ])\n\n    return state;\n}","import React, { useState } from 'react';\nimport AddCategory from './components/addCategory';\nimport GifGrid from './components/gifGrid';\n\nconst GiffExpertApp = () => {\n\n    const [categories, setCategories] = useState(['']);\n\n    return (\n        <div id=\"addCategory\" className=\"contenedor\">\n            <nav>\n                <a class=\"logotipo\" href=\"#\">GiffExpertApp</a>\n                <div>\n                    <AddCategory setCategories={ setCategories }/>\n                </div>\n            </nav>\n            {\n                categories.map(category => <GifGrid key={category} category={ category }/>)\n            }\n        </div>\n    )\n}\n\nexport default GiffExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiffExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiffExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}